<template>
  <div>
    <p v-if="loading">Loading products...</p>
    <p v-if="error">{{ error }}</p>
    <div v-if="products.length && !loading" class="product-list">
      <div v-for="product in products" :key="product.id">
        <div class="product-item">
          <h2>{{ product.name }}</h2><br>
          <h2 v-if="product.onSale" class="sale-text">ON SALE</h2>
          <img :src="'/public/' + product.image" alt="Product Image" class="product-image">
          <p>{{ product.price }} kr</p>
          <!-- Visar bara de första 100 tecknen i beskrivningen -->
          <p>{{ product.description.slice(0, 100) }}{{ product.description.length > 100 ? '...' : '' }}</p>
          <button @click="addToCart(product)">Add to cart</button>
        </div>
      </div>
    </div>
    <p v-else>No products available.</p>
  </div>
</template>

<script setup>
import {ref, onMounted} from 'vue';
import {useRoute} from 'vue-router';
import '@/assets/product.css';


const products = ref([]);  // Hämta och lagra produkter
const route = useRoute();
const categoryId = route.params.id;

// Funktion för att hämta produkter
const fetchProducts = async () => {
  const response = await fetch(`http://localhost:8080/categories/${categoryId}/goods`);
  if (!response.ok) {
    throw new Error("Failed to fetch products");
  }
  const data = await response.json();
  products.value = data;
};


// Körs när komponenten laddas
onMounted(() => {
  fetchProducts();  // Hämta produkter
});
</script>
<style scoped>
</style>
